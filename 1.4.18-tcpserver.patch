--- origsrc/xapian-core-1.4.18/net/tcpserver.cc	2021-01-14 09:44:16.000000000 +0900
+++ src/xapian-core-1.4.18/net/tcpserver.cc
@@ -74,7 +74,7 @@
 TcpServer::TcpServer(const std::string & host, int port, bool tcp_nodelay,
 		     bool verbose_)
     : listen_socket(get_listening_socket(host, port, tcp_nodelay
-#if defined __CYGWIN__ || defined __WIN32__
+#if defined __WIN32__
 					 , mutex
 #endif
 					 )),
@@ -85,7 +85,7 @@
 int
 TcpServer::get_listening_socket(const std::string & host, int port,
 				bool tcp_nodelay
-#if defined __CYGWIN__ || defined __WIN32__
+#if defined __WIN32__
 				, HANDLE &mutex
 #endif
 				)
@@ -119,7 +119,7 @@
 	}
 
 	int optval = 1;
-#if defined __CYGWIN__ || defined __WIN32__
+#if defined __WIN32__
 	// Windows has screwy semantics for SO_REUSEADDR - it allows the user
 	// to bind to a port which is already bound and listening!  That's
 	// just not suitable as we don't want multiple processes listening on
@@ -268,7 +268,7 @@
 TcpServer::~TcpServer()
 {
     CLOSESOCKET(listen_socket);
-#if defined __CYGWIN__ || defined __WIN32__
+#if defined __WIN32__
     if (mutex) CloseHandle(mutex);
 #endif
 }
--- origsrc/xapian-core-1.4.18/net/tcpserver.h	2021-01-14 09:44:16.000000000 +0900
+++ src/xapian-core-1.4.18/net/tcpserver.h
@@ -28,7 +28,7 @@
 # define SOCKET_INITIALIZER_MIXIN
 #endif
 
-#if defined __CYGWIN__ || defined __WIN32__
+#if defined __WIN32__
 # include "safewindows.h" // Only for HANDLE!
 #endif
 
@@ -47,7 +47,7 @@
     /// Don't allow copying.
     TcpServer(const TcpServer &);
 
-#if defined __CYGWIN__ || defined __WIN32__
+#if defined __WIN32__
     /// Mutex to stop two TcpServers running on the same port.
     HANDLE mutex = NULL;
 #endif
@@ -64,7 +64,7 @@
      */
     static int get_listening_socket(const std::string & host, int port,
 				    bool tcp_nodelay
-#if defined __CYGWIN__ || defined __WIN32__
+#if defined __WIN32__
 				    , HANDLE &mutex
 #endif
 	    );
